option add *Background #d9d9d9 widgetDefault
option add *darkBackground #cacaca widgetDefault
option add *lightBackground #dfdfdf widgetDefault
option add *Foreground black widgetDefault
option add *activeBackground white widgetDefault
option add *activeForeground black widgetDefault
option add *disabledForeground #7f7f7f widgetDefault
option add *selectBackground #bfdfff widgetDefault
option add *selectForeground black widgetDefault
option add *selectColor orange widgetDefault
option add *highlightBackground #d9d9d9 widgetDefault
option add *highlightColor black widgetDefault
option add *Entry.background #d9d9d9 widgetDefault
option add *Listbox.background #dfdfdf widgetDefault
option add *label.background #cacaca widgetDefault
option add *Font {helvetica 10} widgetDefault
option add *BoldFont {helvetica 10 bold} widgetDefault
option add *ItalicFont {helvetica 10 italic} widgetDefault
option add *BoldItalicFont {helvetica 10 bold italic} widgetDefault
option add *NonPropFont {courier 10} widgetDefault
option add *Button.font Font widgetDefault
option add *Classy::Browser.dataFont Font widgetDefault
option add *Classy::Browser.font BoldFont widgetDefault
option add *Menu.font BoldItalicFont widgetDefault
option add *Menubutton.font BoldItalicFont widgetDefault
option add *Scale.font BoldItalicFont widgetDefault
option add *Text.font NonPropFont widgetDefault
option add *treeFont Font widgetDefault
event add <<BackSpace>> <BackSpace>
event add <<Bottom>> <Control-End>
event add <<Close>> <Alt-q>
event add <<CompleteTab>> <Control-Shift-v>
event add <<Connect>> <Control-c>
event add <<Copy>> <Alt-c>
event add <<Cut>> <Alt-x>
event add <<Default>> <Alt-d>
event add <<Delete>> <Delete>
event add <<DeleteEnd>> <Control-k>
event add <<Down>> <Down>
event add <<Empty>> <Control-u>
event add <<End>> <End> <Alt-Right>
event add <<EndSelect>> <Control-Shift-space>
event add <<Escape>> <Escape>
event add <<ExecuteCmd>> <Alt-e>
event add <<Find>> <Alt-F>
event add <<FindFunction>> <Control-Alt-f>
event add <<FindNext>> <Alt-f>
event add <<FindPrev>> <Alt-b>
event add <<FocusNext>> <Tab> <Control-Tab>
event add <<FocusPrev>> <ISO_Left_Tab>
event add <<Format>> <Control-Alt-j>
event add <<Goto>> <Alt-j>
event add <<Help>> <F1>
event add <<HistoryDown>> <Alt-Down>
event add <<HistoryUp>> <Alt-Up>
event add <<Home>> <Home> <Alt-Left>
event add <<IndentIn>> <Alt-i>
event add <<IndentOut>> <Alt-I>
event add <<Insert>> <Insert>
event add <<Invoke>> <space>
event add <<KeyMenu>> <Alt-m>
event add <<Left>> <Left>
event add <<Load>> <Alt-o>
event add <<LoadNext>> <Control-Alt-o>
event add <<Macro>> <Alt-m>
event add <<MarkerCurrent>> <Control-w>
event add <<MarkerPrev>> <Control-Shift-w>
event add <<MarkerSelect>> <Alt-Shift-w>
event add <<MarkerSet>> <Alt-w>
event add <<New>> <Alt-n>
event add <<PageBottom>> <Alt-Down>
event add <<PageDown>> <Next>
event add <<PageTop>> <Alt-Up>
event add <<PageUp>> <Prior>
event add <<ParaDown>> <Control-Down>
event add <<ParaUp>> <Control-Up>
event add <<Paste>> <Alt-v>
event add <<PasteSpecial>> <Alt-V>
event add <<Print>> <Control-p>
event add <<Quit>> <Alt-Q>
event add <<Redo>> <Alt-U>
event add <<Reopen>> <Alt-r>
event add <<ReplaceFindNext>> <Alt-g>
event add <<Return>> <Return>
event add <<Right>> <Right>
event add <<Save>> <Alt-s>
event add <<SaveAs>> <Alt-S>
event add <<ScrollPageDown>> <Control-Next> <Control-Alt-Down>
event add <<ScrollPageUp>> <Control-Prior> <Control-Alt-Up>
event add <<SelectAll>> <Alt-a>
event add <<SelectBottom>> <Shift-Control-End>
event add <<SelectDown>> <Shift-Down>
event add <<SelectEnd>> <Shift-End> <Shift-Alt-Right>
event add <<SelectHome>> <Shift-Home> <Shift-Alt-Left>
event add <<SelectLeft>> <Shift-Left>
event add <<SelectNone>> <Alt-z>
event add <<SelectPageBottom>> <Shift-Alt-Down>
event add <<SelectPageDown>> <Shift-Next>
event add <<SelectPageTop>> <Shift-Alt-Up>
event add <<SelectPageUp>> <Shift-Prior>
event add <<SelectParaDown>> <Shift-Control-Down>
event add <<SelectParaUp>> <Shift-Control-Up>
event add <<SelectRight>> <Shift-Right>
event add <<SelectTableDown>> <Control-Shift-Down>
event add <<SelectTableLeft>> <Control-Shift-Left>
event add <<SelectTableRight>> <Control-Shift-Right>
event add <<SelectTableUp>> <Control-Shift-Up>
event add <<SelectTop>> <Shift-Control-Home>
event add <<SelectUp>> <Shift-Up>
event add <<SelectWordLeft>> <Shift-Control-Left>
event add <<SelectWordRight>> <Shift-Control-Right>
event add <<SpecialFocusNext>> <Control-Tab>
event add <<SpecialFocusPrev>> <ISO_Left_Tab>
event add <<StartSelect>> <Control-space>
event add <<TableDown>> <Control-Down>
event add <<TableLeft>> <Control-Left>
event add <<TableRight>> <Control-Right>
event add <<TableUp>> <Control-Up>
event add <<Top>> <Control-Home>
event add <<Transpose>> <Control-t>
event add <<Undo>> <Alt-u>
event add <<Up>> <Up>
event add <<WordLeft>> <Control-Left>
event add <<WordRight>> <Control-Right>
event add <<Action>> <1>
event add <<Action-ButtonRelease>> <ButtonRelease-1>
event add <<Action-ButtonPress>> <ButtonPress-1>
event add <<Action-Motion>> <B1-Motion>
event add <<Action-Leave>> <B1-Leave>
event add <<Action-Enter>> <B1-Enter>
event add <<Adjust>> <2>
event add <<Adjust-ButtonRelease>> <ButtonRelease-2>
event add <<Adjust-ButtonPress>> <ButtonPress-2>
event add <<Adjust-Motion>> <B2-Motion>
event add <<Adjust-Leave>> <B2-Leave>
event add <<Adjust-Enter>> <B2-Enter>
event add <<Menu>> <3>
event add <<Menu-ButtonRelease>> <ButtonRelease-3>
event add <<Menu-ButtonPress>> <ButtonPress-3>
event add <<Menu-Motion>> <B3-Motion>
event add <<Menu-Leave>> <B3-Leave>
event add <<Menu-Enter>> <B3-Enter>
event add <<MAdd>> <Control-1>
event add <<MAdd-ButtonRelease>> <Control-ButtonRelease-1>
event add <<MAdd-ButtonPress>> <Control-ButtonPress-1>
event add <<MAdd-Motion>> <Control-B1-Motion>
event add <<MAdd-Leave>> <Control-B1-Leave>
event add <<MAdd-Enter>> <Control-B1-Enter>
event add <<MExtend>> <Shift-1>
event add <<MExtend-ButtonRelease>> <Shift-ButtonRelease-1>
event add <<MExtend-ButtonPress>> <Shift-ButtonPress-1>
event add <<MExtend-Motion>> <Shift-B1-Motion>
event add <<MExtend-Leave>> <Shift-B1-Leave>
event add <<MExtend-Enter>> <Shift-B1-Enter>
event add <<AdjustDrag>> <ButtonPress-3><B3-Motion>
event add <<Drag-Copy>> <KeyPress-Control_L> <KeyPress-Control_R>
event add <<Drag-Link>> <KeyPress-Shift_L> <KeyPress-Shift_R>
event add <<Drag>> <ButtonPress-1><B1-Motion>
event add <<MAddLine>> <Triple-Control-1>
event add <<MAddWord>> <Double-Control-1>
event add <<MExecute>> <Double-1>
event add <<MExecuteAjust>> <Double-2>
event add <<MExtendLine>> <Triple-Shift-1>
event add <<MExtendWord>> <Double-Shift-1>
event add <<MIcursor>> <Control-1>
event add <<MPosition>> <Control-1> <Control-2>
event add <<MSelectLine>> <Triple-1>
event add <<MSelectWord>> <Double-1>
event add <<MXPaste>> <2>
event add <<MainMenu>> <Control-3>
set ::Classy::configmenu(Classy::Builder) {
menu "File" {
	action "Code dir" {%W configure -dir code} <<CodeDir>>
	action "Configuration dir" {%W configure -dir config} <<ConfDir>>
	action "Help dir" {%W configure -dir help} <<HelpDir>>
	action "Application dir" {%W configure -dir {}} <<AppDir>>
	action "Select dir" {%W configure -dir [Classy::selectfile -default Classy::Builder]} <<Dir>>
	action "Save" {%W save} <<Save>>
	action "Editor" "edit newfile" <<Editor>>
	action "Command window" {Classy::cmd} <<Cmd>>
	separator
	action "Close" {destroy %W} <<Close>>
	action "Exit" {exit} <<Exit>>
}
menu "Add" {
	action "New file" {%W new file} <<newfile>>
	action "New Toplevel" {%W new toplevel} <<newtoplevel>>
	action "New Dialog" {%W new dialog} <<newdialog>>
	action "New Frame" {%W new frame} <<newframe>>
	action "New function" {%W new function} <<newfunction>>
	action "New configuration" {%W new config} <<newfile>>
}
menu "Edit" {
	action "Edit" {%W openendnode [lindex [%W.browse selection] 0]} <<Edit>>
	action "Rename" {%W rename} <<Rename>>
	separator
	action "Copy" {%W copy} <<Copy>>
	action "Cut" {%W cut} <<Cut>>
	action "Delete" {%W delete} <<Delete>>
	action "Paste" {%W paste} <<Paste>>
}
menu "Help" {
	action "Builder" {Classy::help classy_builder} <<Help>>
	separator
	action "ClassyTcl" {Classy::help ClassyTcl} <<HelpClassyTcl>>
	action "Help" {Classy::help help} <<HelpHelp>>
}
}
set ::Classy::configmenu(Classy::Dummy) {
menu "Menu" {
}
}
set ::Classy::configmenu(Classy::Editor) {
menu "File" {
	action "Open file" {eval %W load [Classy::selectfile -title Open -selectmode persistent]} <<Load>>
	action "Open next" {%W loadnext} <<LoadNext>>
	action "Save" {%W save} <<Save>>
	action "Save as" {%W savedialog} <<SaveAs>>
	action "Reopen" {%W reopenlist} <<Reopen>>
	action "New editor" {edit newfile} <<New>>
	action "Command window" {Classy::cmd} <<Cmd>>
	separator
	action "Customise application" {Classy::Config dialog} <<Customise>>
	action "Customise menu" {Classy::Config config menu Classy::Editor} <<CustomiseMenu>>
	action "Customise toolbar" {Classy::Config config tool Classy::Editor} <<CustomiseTool>>
	action "Close" "%W close" <<Close>>
}
menu "Edit" {
	action "Cut" "%W cut" <<Cut>>
	action "Copy" "%W copy" <<Copy>>
	action "Paste" "%W paste" <<Paste>>
	action "Undo" "%W undo" <<Undo>>
	action "Redo" "%W redo" <<Redo>>
	action "Clear undo buffer" "%W clearundo" <<ClearUndo>>
}
menu "Find" {
	action "Goto line" {Classy::InputDialog %W.goto -label "Goto line" -title Goto -buttontext Goto -command {%W gotoline}} <<Goto>>
	action "Find" "%W finddialog" <<Find>>
	action "Find next" "%W findsel -forwards" <<FindNext>>
	action "Replace & Find next" "%W replace-find -forwards" <<ReplaceFindNext>>
	action "Find prev" "%W findsel -backwards" <<FindPrev>>
	action "Replace & Find prev" "%W replace-find -backwards" <<ReplaceFindPrev>>
	check "Search Reopen" {-variable [privatevar %W options(-searchreopen)]} <<SearchReopen>>
	action "Find Tcl function" "%W findfunction" <<FindFunction>>
}
menu "Select" {
	action "Select all" "%W select all" <<SelectAll>>
	action "Select none" "%W select none" <<SelectNone>>
	action "Matching Brackets" "%W matchingbrackets" Alt-bracketleft <<MatchingBrackets>>
	separator
	action "Marker Box" "%W marker select" <<MarkerSelect>>
	action "Marker set" "%W marker set" <<MarkerSet>>
	action "Current Marker" "%W marker current" <<MarkerCurrent>>
	action "Previous Marker" "%W marker previous" <<MarkerPrev>>
}
menu "Tools" {
	action "Indented Return" "%W indentedcr" <<IndentCr>>
	action "Indent in" "%W indent 1" <<IndentIn>>
	action "Indent out" "%W indent -1" <<IndentOut>>
	action "Comment" "%W comment add" <Alt-numbersign>
	action "Remove comment" "%W comment remove" <Control-Alt-numbersign>
	action "Set tab stops" {Classy::InputDialog %W.tabstops -label "Tab stops" -title Tabstops -buttontext Set -command {%W configure -tabs}} <<SetTabs>>
	separator
	action "Connect to" "%W connectto" <<Connect>>
	action "Execute Tcl command" "%W execute" <<ExecuteCmd>>
	action "format" "%W format 76" <<Format>>
}
activemenu "Macros" {%W getmacromenu}
activemenu "Pattern" {%W getpatternmenu}
menu "Help" {
	action "Editor" {Classy::help classy_editor} <<Help>>
	separator
	action "ClassyTcl" {Classy::help ClassyTcl} <<HelpClassyTcl>>
	action "Help" {Classy::help help} <<HelpHelp>>
}
}
set ::Classy::configmenu(Classy::Filer) {
menu "Selection" {
	action "Delete" {%W deletefiles sel} <<Delete>>
	action "Rename" {%W renamebox} C-r <<Rename>>
	action "Copy" {%W copybox} <<Copy>>
}
menu "Options" {
	check "Hidden files" {-variable [privatevar %W hidden] -onvalue yes -offvalue no -command {%W refresh}} <<HiddenFiles>>
	action "Filter" "%W filterbox" C-f <<Filter>>
	separator
	radio "Sort by extension" {-variable [privatevar %W order] -value extension -command {%W refresh}} <<SortExt>>
	radio "Sort by time" {-variable [privatevar %W order] -value time -command {%W refresh}} <<SortTime>>
	radio "Sort by access" {-variable [privatevar %W order] -value accesstime -command {%W refresh}} <<SortAccess>>
	radio "Sort by size" {-variable [privatevar %W order] -value size -command {%W refresh}} <<SortSize>>
	radio "Unsorted (as on disk)" {-variable [privatevar %W order] -value disk -command {%W refresh}} <<Unsorted>>
	separator
	radio "Normal icons" {-variable [privatevar %W view] -value normal -command {%W redraw}} <<NormalIcons>>
	radio "Small icons" {-variable [privatevar %W view] -value small -command {%W redraw}} <<SmallIcons>>
	radio "Full info" {-variable [privatevar %W view] -value full -command {%W redraw}} <<FullInfo>>
}
}
set ::Classy::configmenu(Classy::Help) {
menu "File" {
	action "Reload" {%W reload} <<Reload>>
	action "Edit" {%W edit} <<Edit>>
	action "Save source" {%W save [Classy::selectfile]} <<Save>>
	action "Save as text" {%W save [Classy::selectfile] text} <<SaveText>>
	action "Editor" {edit newfile} <<Editor>>
	action "Command window" {Classy::cmd} <<Cmd>>
	separator
	action "Customise application" {Classy::Config dialog} <<Customise>>
	action "Customise menu" {Classy::Config config menu Classy::Help} <<CustomiseMenu>>
	action "Customise toolbar" {Classy::Config config tool Classy::Help} <<CustomiseTool>>
	action "Close" {destroy %W} <<Close>>
}
activemenu "Contents" {%W getcontentsmenu}
menu "Go" {
	action "Back" {%W back} <<Back>>
	action "Forward" {%W forward} C-r <<Forward>>
	action "History" {%W historymenu} <<History>>
}
activemenu "General" {%W getgeneralmenu}
}
set ::Classy::configmenu(Classy::Test) {
	menu "File" {
		action "Open file" {%W insert insert "Open: %W"} <<Load>>
		action "Open next" {%W insert insert "Open next: %W"} <<LoadNext>>
		action "Test" {%W insert insert "Test: %W"} <<Try>>
		menu "Trying" {
			action "Trying" {%W insert insert "submenu: %W"} Alt-d
		}
		action Save {puts save} Save
		radio "Radio try" {-variable test -value try} <<Radio1>>
		radio "Radio try2" {-variable test -value try2} <<Radio2>>
	} Alt-f
	# The find menu
	menu "Find" {
		action "Goto line" {puts "Goto line"} <<Goto>>
		action "Find" {%W insert end find} <<Find>>
		separator
		action "Replace & Find next" {%W insert end replace} <<ReplaceFindNext>>
		check "Search Reopen" {-variable test%W -onvalue yes -offvalue no} <<SearchReopen>>
	}
	action "Test" {%W insert insert "Test: %W"} Alt-t
}
set ::Classy::configmenu(Classy::WindowBuilder) {
menu "File" {
	action "Save" {[Classy::WindowBuilder_win %W] save} <<Save>>
	action "Test" {[Classy::WindowBuilder_win %W] test} <<Test>>
	action "Fast test" {[Classy::WindowBuilder_win %W] ftest} <<FastTest>>
	action "Recreate" {[Classy::WindowBuilder_win %W] recreate} <<Recreate>>
	separator
	action "Editor" "edit newfile" <<Editor>>
	action "Command window" {Classy::cmd} <<Cmd>>
	separator
	action "Close" {[Classy::WindowBuilder_win %W] close} <<Close>>
}
menu "Edit" {
	action "Copy" {[Classy::WindowBuilder_win %W] copy} <<Copy>>
	action "Cut" {[Classy::WindowBuilder_win %W] cut} <<Cut>>
	action "Delete" {[Classy::WindowBuilder_win %W] delete} <<Delete>>
	action "Paste" {[Classy::WindowBuilder_win %W] paste} <<Paste>>
	separator
	action "Move up" {[Classy::WindowBuilder_win %W] geometryset up} <<Up>>
	action "Move down" {[Classy::WindowBuilder_win %W] geometryset down} <<Down>>
	action "Move left" {[Classy::WindowBuilder_win %W] geometryset left} <<Left>>
	action "Move right" {[Classy::WindowBuilder_win %W] geometryset right} <<Right>>
	action "Rowspan smaller" {[Classy::WindowBuilder_win %W] geometryset spanup} <<SelectUp>>
	action "Rowspan larger" {[Classy::WindowBuilder_win %W] geometryset spandown} <<SelectDown>>
	action "Columnspan smaller" {[Classy::WindowBuilder_win %W] geometryset spanleft} <<SelectLeft>>
	action "Columnspan larger" {[Classy::WindowBuilder_win %W] geometryset spanright} <<SelectRight>>
}
menu "Tk" {
	action Frame {[Classy::WindowBuilder_win %W] add frame}
	action Entry {[Classy::WindowBuilder_win %W] add entry}
	action Label {[Classy::WindowBuilder_win %W] add label}
	action Button {[Classy::WindowBuilder_win %W] add button}
	action "Check button" {[Classy::WindowBuilder_win %W] add checkbutton}
	action "Radio button" {[Classy::WindowBuilder_win %W] add radiobutton}
	action Message {[Classy::WindowBuilder_win %W] add message}
	action "Vertical Scrollbar" {[Classy::WindowBuilder_win %W] add scrollbar -orient vertical}
	action "Horizontal Scrollbar" {[Classy::WindowBuilder_win %W] add scrollbar -orient horizontal}
	action Listbox {[Classy::WindowBuilder_win %W] add listbox}
	action Text {[Classy::WindowBuilder_win %W] add text}
	action Canvas {[Classy::WindowBuilder_win %W] add canvas}
	action Scale {[Classy::WindowBuilder_win %W] add scale}
}
menu "ClassyTcl" {
	action "Main Menu" {[Classy::WindowBuilder_win %W] add Classy::DynaMenu}
	action "Toolbar" {%W add Classy::DynaTool}
	action "Entry" {[Classy::WindowBuilder_win %W] add Classy::Entry}
	action "Numerical Entry" {[Classy::WindowBuilder_win %W] add Classy::NumEntry}
	action "ListBox" {[Classy::WindowBuilder_win %W] add Classy::ListBox}
	action "scrolled Text" {[Classy::WindowBuilder_win %W] add Classy::ScrolledText}
	action "Message" {%W add Classy::Message}
	action "Text" {[Classy::WindowBuilder_win %W] add Classy::Text}
	action "Canvas" {[Classy::WindowBuilder_win %W] add Classy::Canvas}
	action "Notebook with tabs" {[Classy::WindowBuilder_win %W] add Classy::NoteBook}
	action "OptionBox" {[Classy::WindowBuilder_win %W] add Classy::OptionBox}
	action "OptionMenu" {[Classy::WindowBuilder_win %W] add Classy::OptionMenu}
	action "Paned" {[Classy::WindowBuilder_win %W] add Classy::Paned}
	action "Progress bar" {[Classy::WindowBuilder_win %W] add Classy::Progress}
	action "Scrolled frame" {[Classy::WindowBuilder_win %W] add Classy::ScrolledFrame}
	action "Table" {[Classy::WindowBuilder_win %W] add Classy::Table}
	action "Fold" {[Classy::WindowBuilder_win %W] add Classy::Fold}
	action "Font select" {[Classy::WindowBuilder_win %W] add button -text "Select font" -command {set font [Classy::getfont]}}
	action "Color select" {[Classy::WindowBuilder_win %W] add button -text "Select color" -command {set color [Classy::getcolor]}}
	action "Tree widget" {[Classy::WindowBuilder_win %W] add Classy::TreeWidget}
	action "Browser" {[Classy::WindowBuilder_win %W] add Classy::Browser}
	action "CmdWidget" {[Classy::WindowBuilder_win %W] add Classy::CmdWidget}
}
menu "Help" {
	action "Window Builder" {Classy::help classy_windowbuilder} <<Help>>
	action "Builder" {Classy::help classy_builder} <<HelpBuilder>>
	separator
	action "ClassyTcl" {Classy::help ClassyTcl} <<HelpClassyTcl>>
	action "Help" {Classy::help help} <<HelpHelp>>
}
}
set ::Classy::configtoolbar(Classy::Builder) {
	action newfunction "New function" {%W new function}
	action newtoplevel "New Toplevel" {%W new toplevel}
	action newdialog "New Dialog" {%W new dialog}
	action newframe "New Frame" {%W new frame}
	action newfile "New file" {puts %W ; %W new file}
	separator
	action save "Save" {%W save}
	action copy "Copy" {%W copy}
	action cut "Cut" {%W cut}
	action paste "Paste" {%W paste}
	separator
}
set ::Classy::configtoolbar(Classy::Builder) {
	action newfunction "New function" {%W new function}
	action newtoplevel "New Toplevel" {%W new toplevel}
	action newdialog "New Dialog" {%W new dialog}
	action newframe "New Frame" {%W new frame}
	action newfile "New file" {puts %W ; %W new file}
	separator
	action save "Save" {%W save}
	action copy "Copy" {%W copy}
	action cut "Cut" {%W cut}
	action paste "Paste" {%W paste}
	separator
}
set ::Classy::configtoolbar(Classy::Dummy) {
	action Builder/question {Dummy tool} {Classy::msg "Just a d ummy toolbar"}
}
set ::Classy::configtoolbar(Classy::Editor) {
	nodisplay
	action save "Save" {%W save}
	action open "Open" {eval %W load [Classy::selectfile -title Open -selectmode persistent]}
	action undo "Undo" {%W undo}
	action redo "redo" {%W redo}
	separator
	action print "Print" {%W insert insert "Print: %W"}
	action open "Open next" {%W next}
}
set ::Classy::configtoolbar(Classy::Help) {
	action reload "Reload" {%W reload}
	action back "Back" {%W back}
	action forward "Forward" {%W forward}
	action edit "Edit" {%W edit}
	tool Classy::Help_find "Find" 
	tool Classy::Help_findword "Find word"
	tool Classy::Help_findfile "Find file"
	tool Classy::Help_findinfile "Find in files"
}
set ::Classy::configtoolbar(Classy::WindowBuilder) {
	action cut "Delete" {%W delete}
	separator
	action save "Save" {%W save}
	action test "Test" {%W test}
	action ptest "Test with parameters" {%W testparam}
	action recreate "Recreate Dialog" {%W recreate}
	separator
	action close "Close" {destroy %W}
}
set ::Classy::configtoolbar(Classy::WindowBuilder_icons) {
	action Builder/classy__dynamenu {Main Menu} {%W add Classy::DynaMenu}
	action Builder/classy__dynatool {Toolbar} {%W add Classy::DynaTool}
	action Builder/frame Frame {%W add frame}
	action Builder/entry Entry {%W add entry}
	action Builder/classy__entry {ClassyTcl Entry} {%W add Classy::Entry}
	action Builder/classy__numentry {ClassyTcl Numerical Entry} {%W add Classy::NumEntry}
	action Builder/button Button {%W add button}
	action Builder/checkbutton {Check button} {%W add checkbutton}
	action Builder/radiobutton {Radio button} {%W add radiobutton}
	action Builder/label Label {%W add label}
	action Builder/classy__message "ClassyTcl Message" {%W add Classy::Message}
	action Builder/message Message {%W add message}
	action Builder/vscroll "Vertical Scrollbar" {%W add scrollbar -orient vertical}
	action Builder/hscroll "Horizontal Scrollbar" {%W add scrollbar -orient horizontal}
	action Builder/listbox Listbox {%W add listbox}
	action Builder/classy__listbox {ClassyTcl ListBox} {%W add Classy::ListBox}
	action Builder/text Text {%W add text}
	action Builder/classy__text {ClassyTcl Text} {%W add Classy::Text}
	action Builder/classy__scrolledtext {ClassyTcl scrolled Text} {%W add Classy::ScrolledText}
	action Builder/canvas Canvas {%W add canvas}
	action Builder/classy__canvas {ClassyTcl Canvas} {%W add Classy::Canvas}
	action Builder/scale Scale {%W add scale}
	action Builder/classy__notebook {Notebook with tabs} {%W add Classy::NoteBook}
	action Builder/classy__optionbox {ClassyTcl OptionBox} {%W add Classy::OptionBox}
	action Builder/classy__optionmenu {ClassyTcl OptionMenu} {%W add Classy::OptionMenu}
	action Builder/classy__paned {Paned} {%W add Classy::Paned}
	action Builder/classy__progress {Progress bar} {%W add Classy::Progress}
	action Builder/classy__scrolledframe {Scrolled frame} {%W add Classy::ScrolledFrame}
	action Builder/classy__table {Table} {%W add Classy::Table}
	action Builder/classy__fold {Fold} {%W add Classy::Fold}
	action Builder/classy__fontselect {Font select} {%W add button -text "Select font" -command {set font [Classy::getfont]}}
	action Builder/classy__colorselect {Color select} {%W add button -text "Select color" -command {set color [Classy::getcolor]}}
	action Builder/classy__fileselect {File select} {%W add button -text "Select file" -command {set file [Classy::selectfile]}}
	action Builder/classy__selector {Selector} {%W add Classy::Selector}
	action Builder/classy__treewidget {Tree widget} {%W add Classy::TreeWidget}
	action Builder/classy__browser {Browser} {%W add Classy::Browser}
	action Builder/classy__cmdwidget {CmdWidget} {%W add Classy::CmdWidget}
}
option add 1 int widgetDefault
option add *Checkbutton.anchor w widgetDefault
option add *PatchTk 1 widgetDefault
option add *Button.padX 1 widgetDefault
option add *Button.padY 1 widgetDefault
option add *Classy::OptionBox.BorderWidth 1 widgetDefault
option add *Frame.HighlightThickness 0 widgetDefault
option add *HighlightThickness 1 widgetDefault
option add *Menu.BorderWidth 1 widgetDefault
option add *MenuButton.padX 1 widgetDefault
option add *MenuButton.padY 1 widgetDefault
option add *Scrollbar.width 10 widgetDefault
option add *Toplevel.HighlightThickness 0 widgetDefault
option add *Classy::OptionBox.Relief groove widgetDefault
option add *Bgerror Classy widgetDefault
option add *GetColor Classy widgetDefault
option add *GetFont Win widgetDefault
option add *SaveFile Win widgetDefault
option add *SelectFile Win widgetDefault
option add *ScrollSide right widgetDefault
option add *MenuType top widgetDefault
option add *ColorList {
	{blue cyan green yellow orange red magenta}
	{blue3 cyan3 green3 yellow3 orange3 red3 magenta3}
	{black gray20 gray40 gray50 gray60 gray80 white}
} widgetDefault
option add *PaperSizes {
	User      "595p 842p"
	Letter    "612p 792p"
	Tabloid   "792p 1224p"
	Ledger    "1224p 792p"
	Legal     "612p 1008p"
	Statement "396p 612p"
	Executive "540p 720p"
	A0        "2380p 3368p"
	A1        "1684p 2380p"
	A2        "1190p 1684p"
	A3        "842p 1190p"
	A4        "595p 842p"
	A5        "420p 595p"
	B4        "729p 1032p"
	B5        "516p 729p"
	Folio     "612p 936p"
	Quarto    "610p 780p"
} widgetDefault
