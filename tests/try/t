wish4
source init.tcl

puts stdout test
destroy .try
itcl_unload ColorEntry
ColorEntry .try -label Test -value yellow -command {puts stdout [.try get]}
pack .try -fill x
.try configure -font -*-Times-*
.try configure -labelfont -*-Times-*

destroy .try
itcl_unload ColorHSV
ColorHSV .try -command {puts stdout [.try get]}
pack .try -fill both -expand yes

destroy .try
itcl_unload ColorRGB
ColorRGB .try -command {puts stdout [.try get]}
pack .try -fill both -expand yes

destroy .try
itcl_unload OptionBox
OptionBox .try -label Try
pack .try -fill x
.try add t1 "T 1" {puts stdout t1}
.try add t2 "T 2" {puts stdout t2}
.try add t3 "T 3" {puts stdout t3}
OptionBox .try2 -label Try2
pack .try2 -fill x
.try2 add t1 "T 1" {puts stdout t1}
.try2 add t2 "T 2" {puts stdout t2}
.try2 add t3 "T 3" {puts stdout t3}

destroy .try
eval itcl_unload [itcl_info classes *]
NoteBook .try
pack .try -fill both -expand yes
text .try.t1
.try.t1 insert end "try"
button .try.t2 -text "Yes" -command "puts stdout Yes"
.try manage t1 Text
.try manage t2 Button
.try select t1

exit

destroy .try
eval itcl_unload [itcl_info classes *]
ColorSelect .try -command {puts stdout [.try get]} -value white
pack .try -fill both -expand yes

wish4
source init.tcl 

destroy .try
itcl_unload EntryScale
EntryScale .try -label Test\
    -from 1 -to 100 -value 10
pack .try -fill y -expand yes

destroy .try .t
itcl_unload MainMenu
MainMenu .try
pack .try -side top -fill x -anchor e
text .t
pack .t -side bottom -expand yes -fill both
.try addmenu file File
.try addmenu try Try
.try addaction file "Try 1" {puts stdout "Try 1"} A-1
.try addseparator file
.try addaction file "Try 2" {puts stdout "Try 2"} A-2
.try addsubmenu try.try Try
.try addaction try.try "Try 3" {puts stdout "Try 3"} A-3
.try addcheck try.try "Check" checkb {puts stdout check} A-c
.try bindto .t

destroy .try
itcl_unload Editor
source init.tcl
Editor .try
pack .try -fill both -expand yes

wish4
source init.tcl
destroy .try
itcl_unload PeosEntry
PeosEntry .try -constraint {^[a-zA-Z]*$} -label Try -default try -value firsttry -textvariable try
pack .try -fill x -expand yes

wish4
source init.tcl
destroy .try
itcl_unload NumEntry PeosEntry
NumEntry .try -label Try -constraint float -min 0 -default try -value 1
pack .try -fill x -expand yes

wish4
source init.tcl
initdefaults
default get app try
default get peos try

default reset app try {dfg sd sfgh}
default reset app try2 {dfg sd sfgh fdgh dfj}
default add app try 1
default add app try3 try
default add peos try dfghdfghj
default save app
default save peos
zip /usr/people/peter/work/peos/.wishpeter.def /usr/people/peter/.peospeter.def

destroy .try
itcl_unload DefaultMenu DefaultsHandler
DefaultMenu .try try -command "puts stdout" -addcommand {.try add try}
pack .try

wish4
wm withdraw .
source init.tcl
destroy .try
itcl_unload PeosDialog
PeosDialog .try -title Try -help tryhelp
.try add go Go {puts stdout go} default
.try add yes Yes {puts stdout yes}
.try add yoyo Yoyo {puts stdout yoyo}
PeosEntry .try.options.entry -label Try
pack .try.options.entry -fill x

wish
destroy .e
itcl_unload Editor PeosDialog
Editor .e
pack .e -expand yes -fill both
.e.text insert end "dfg sdgsdgfsdfg\nsdthsdg sdgsdhsgfgh\nsdfshdfdgh"
wm geometry . 20x10
.e finddialog

LoadBox .t -loadcommand {puts stdout}

