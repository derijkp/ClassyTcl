# Menus Classy::Editor
# menu used in the ClassyTcl Editor
menu Classy::Editor {
menu "File" {
	action "Open file" {eval %W load [Classy::selectfile -title Open -selectmode persistent]} <<Load>>
	action "Open next" {%W loadnext} <<LoadNext>>
	action "Save" {%W save} <<Save>>
	action "Save as" {%W savedialog} <<SaveAs>>
	action "Reopen" {%W reopenlist} <<Reopen>>
	separator
	action "New editor" {edit newfile} <<New>>
	action "Command window" {Classy::cmd} <<Cmd>>
	action "Customise application" {Classy::Config dialog} <<Customise>>
	action "Customise menu" {Classy::Config dialog -node {Menus Classy::Editor}} <<CustomiseMenu>>
	action "Customise toolbar" {Classy::Config dialog -node {Menus Classy::Editor}} <<CustomiseTool>>
	action "Close" "%W close" <<Close>>
}
menu "Edit" {
	action "Cut" "%W cut" <<Cut>>
	action "Copy" "%W copy" <<Copy>>
	action "Paste" "%W paste" <<Paste>>
	action "Undo" "%W undo" <<Undo>>
	action "Redo" "%W redo" <<Redo>>
	action "Clear undo buffer" "%W clearundo" <<ClearUndo>>
}
menu "Find" {
	action "Goto line" {Classy::InputDialog %W.goto -label "Goto line" -title Goto -buttontext Goto -command {%W gotoline}} <<Goto>>
	action "Find" "%W finddialog" <<Find>>
	action "Find next" "%W findsel -forwards" <<FindNext>>
	action "Replace & Find next" "%W replace-find -forwards" <<ReplaceFindNext>>
	action "Find prev" "%W findsel -backwards" <<FindPrev>>
	action "Replace & Find prev" "%W replace-find -backwards" <<ReplaceFindPrev>>
	check "Search Reopen" {-variable [privatevar %W options(-searchreopen)]} <<SearchReopen>>
	action "Find Tcl function" "%W findfunction" <<FindFunction>>
	action "Grep" "%W grep" <<Grep>>
}
menu "Select" {
	action "Select all" "%W select all" <<SelectAll>>
	action "Select none" "%W select none" <<SelectNone>>
	action "Matching Brackets" "%W matchingbrackets" <Alt-bracketleft> <<MatchingBrackets>>
	separator
	action "Marker Box" "%W marker select" <<MarkerSelect>>
	action "Marker set" "%W marker set" <<MarkerSet>>
	action "Current Marker" "%W marker current" <<MarkerCurrent>>
	action "Previous Marker" "%W marker previous" <<MarkerPrev>>
}
menu "Tools" {
	action "Indented Return" "%W indentedcr" <<IndentCr>>
	action "Indent in" "%W indent 1" <<IndentIn>>
	action "Indent out" "%W indent -1" <<IndentOut>>
	action "Comment" "%W comment add" <Alt-numbersign>
	action "Remove comment" "%W comment remove" <Control-Alt-numbersign>
	action "Set tab stops" {Classy::InputDialog %W.tabstops -label "Tab stops" -title Tabstops -buttontext Set -command {%W configure -tabs}} <<SetTabs>>
	separator
	action "Connect to" "%W connectto" <<Connect>>
	action "Execute Tcl command" "%W execute" <<ExecuteCmd>>
	action "format" "%W format 76" <<Format>>
}
activemenu "Macros" {%W getmacromenu}
activemenu "Pattern" {%W getpatternmenu}
menu "Help" {
	action "Editor" {Classy::help classy_editor} <<Help>>
	separator
	action "ClassyTcl" {Classy::help ClassyTcl} <<HelpClassyTcl>>
	action "Help" {Classy::help help} <<HelpHelp>>
}}

# Menus Classy::Help
# menu used in the ClassyTcl help system
menu Classy::Help {
menu "File" {
	action "Reload" {%W reload} <<Reload>>
	action "Edit" {%W edit} <<Edit>>
	action "Save source" {%W save [Classy::selectfile]} <<Save>>
	action "Save as text" {%W save [Classy::selectfile] text} <<SaveText>>
	separator
	action "Editor" {edit newfile} <<Editor>>
	action "Command window" {Classy::cmd} <<Cmd>>
	action "Customise application" {Classy::Config dialog} <<Customise>>
	action "Customise menu" {Classy::Config dialog -node {Menus Classy::Help}} <<CustomiseMenu>>
	action "Customise toolbar" {Classy::Config dialog -node {Menus Classy::Help}} <<CustomiseTool>>
	action "Close" {destroy %W} <<Close>>
}
activemenu "Contents" {%W getcontentsmenu}
menu "Go" {
	action "Back" {%W back} <<Back>>
	action "Forward" {%W forward} <<Forward>>
	action "History" {%W historymenu} <<History>>
}
activemenu "General" {%W getgeneralmenu}
}

# Menus Classy::Filer
# menu used in the ClassyTcl Filer
menu Classy::Filer {
menu "Selection" {
	action "Delete" {%W deletefiles sel} <<Delete>>
	action "Rename" {%W renamebox} <<Rename>>
	action "Copy" {%W copybox} <<Copy>>
}
menu "Options" {
	check "Hidden files" {-variable [privatevar %W hidden] -onvalue yes -offvalue no -command {%W refresh}} <<HiddenFiles>>
	action "Filter" "%W filterbox" <<Filter>>
	separator
	radio "Sort by extension" {-variable [privatevar %W order] -value extension -command {%W refresh}} <<SortExt>>
	radio "Sort by time" {-variable [privatevar %W order] -value time -command {%W refresh}} <<SortTime>>
	radio "Sort by access" {-variable [privatevar %W order] -value accesstime -command {%W refresh}} <<SortAccess>>
	radio "Sort by size" {-variable [privatevar %W order] -value size -command {%W refresh}} <<SortSize>>
	radio "Unsorted (as on disk)" {-variable [privatevar %W order] -value disk -command {%W refresh}} <<Unsorted>>
	separator
	radio "Normal icons" {-variable [privatevar %W view] -value normal -command {%W redraw}} <<NormalIcons>>
	radio "Small icons" {-variable [privatevar %W view] -value small -command {%W redraw}} <<SmallIcons>>
	radio "Full info" {-variable [privatevar %W view] -value full -command {%W redraw}} <<FullInfo>>
}
}

# Menus Classy::Builder
# menu used in the ClassyTcl Builder
menu Classy::Builder {
menu "File" {
	action "Code directory" {%W configure -dir code} <<CodeDir>>
	action "Help directory" {%W configure -dir help} <<HelpDir>>
	action "Select directory" {%W configure -dir [Classy::selectfile -default Classy::Builder]} <<Dir>>
	action "Customise" {Classy::Config dialog} <<Customise>>
	separator
	action "Editor" "edit newfile" <<Editor>>
	action "Command window" {Classy::cmd} <<Cmd>>
	action "Close" {destroy %W} <<Close>>
	action "Exit" {exit} <<Exit>>
}
menu "Add" {
	action "New file" {%W new file} <<newfile>>
	action "New Toplevel" {%W new toplevel} <<newtoplevel>>
	action "New Dialog" {%W new dialog} <<newdialog>>
	action "New Frame" {%W new frame} <<newframe>>
	action "New function" {%W new function} <<newfunction>>
}
menu "Edit" {
	action "Edit" {%W openendnode [lindex [%W.browse selection] 0]} <<Edit>>
	action "Rename" {%W rename} <<Rename>>
	separator
	action "Copy" {%W copy} <<Copy>>
	action "Cut" {%W cut} <<Cut>>
	action "Delete" {%W delete} <<Delete>>
	action "Paste" {%W paste} <<Paste>>
}
menu "Help" {
	action "Builder" {Classy::help classy_builder} <<Help>>
	separator
	action "ClassyTcl" {Classy::help ClassyTcl} <<HelpClassyTcl>>
	action "Help" {Classy::help classy_help} <<HelpHelp>>
}
}

# Menus Classy::WindowBuilder
# menu used in the ClassyTcl WindowBuilder
menu Classy::WindowBuilder {
menu "File" {
	action "Save" {[Classy::WindowBuilder_win %W] save} <<Save>>
	action "Test" {[Classy::WindowBuilder_win %W] test} <<Test>>
	action "Fast test" {[Classy::WindowBuilder_win %W] ftest} <<FastTest>>
	action "Recreate" {[Classy::WindowBuilder_win %W] recreate} <<Recreate>>
	separator
	action "Editor" "edit newfile" <<Editor>>
	action "Command window" {Classy::cmd} <<Cmd>>
	separator
	action "Close" {[Classy::WindowBuilder_win %W] close} <<Close>>
}
menu "Edit" {
	action "Copy" {[Classy::WindowBuilder_win %W] copy} <<Copy>>
	action "Cut" {[Classy::WindowBuilder_win %W] cut} <<Cut>>
	action "Delete" {[Classy::WindowBuilder_win %W] delete} <<Delete>>
	action "Paste" {[Classy::WindowBuilder_win %W] paste} <<Paste>>
	separator
	action "Move up" {[Classy::WindowBuilder_win %W] geometryset up} <<Up>>
	action "Move down" {[Classy::WindowBuilder_win %W] geometryset down} <<Down>>
	action "Move left" {[Classy::WindowBuilder_win %W] geometryset left} <<Left>>
	action "Move right" {[Classy::WindowBuilder_win %W] geometryset right} <<Right>>
	action "Rowspan smaller" {[Classy::WindowBuilder_win %W] geometryset spanup} <<SelectUp>>
	action "Rowspan larger" {[Classy::WindowBuilder_win %W] geometryset spandown} <<SelectDown>>
	action "Columnspan smaller" {[Classy::WindowBuilder_win %W] geometryset spanleft} <<SelectLeft>>
	action "Columnspan larger" {[Classy::WindowBuilder_win %W] geometryset spanright} <<SelectRight>>
}
menu "Tk" {
	action Frame {[Classy::WindowBuilder_win %W] add frame}
	action Entry {[Classy::WindowBuilder_win %W] add entry}
	action Label {[Classy::WindowBuilder_win %W] add label}
	action Button {[Classy::WindowBuilder_win %W] add button}
	action "Check button" {[Classy::WindowBuilder_win %W] add checkbutton}
	action "Radio button" {[Classy::WindowBuilder_win %W] add radiobutton}
	action Message {[Classy::WindowBuilder_win %W] add message}
	action "Vertical Scrollbar" {[Classy::WindowBuilder_win %W] add scrollbar -orient vertical}
	action "Horizontal Scrollbar" {[Classy::WindowBuilder_win %W] add scrollbar -orient horizontal}
	action Listbox {[Classy::WindowBuilder_win %W] add listbox}
	action Text {[Classy::WindowBuilder_win %W] add text}
	action Canvas {[Classy::WindowBuilder_win %W] add canvas}
	action Scale {[Classy::WindowBuilder_win %W] add scale}
}
menu "ClassyTcl" {
	action "Main Menu" {[Classy::WindowBuilder_win %W] add Classy::DynaMenu}
	action "Toolbar" {%W add Classy::DynaTool}
	action "Entry" {[Classy::WindowBuilder_win %W] add Classy::Entry}
	action "Numerical Entry" {[Classy::WindowBuilder_win %W] add Classy::NumEntry}
	action "ListBox" {[Classy::WindowBuilder_win %W] add Classy::ListBox}
	action "scrolled Text" {[Classy::WindowBuilder_win %W] add Classy::ScrolledText}
	action "Message" {%W add Classy::Message}
	action "Text" {[Classy::WindowBuilder_win %W] add Classy::Text}
	action "Canvas" {[Classy::WindowBuilder_win %W] add Classy::Canvas}
	action "Notebook with tabs" {[Classy::WindowBuilder_win %W] add Classy::NoteBook}
	action "OptionBox" {[Classy::WindowBuilder_win %W] add Classy::OptionBox}
	action "OptionMenu" {[Classy::WindowBuilder_win %W] add Classy::OptionMenu}
	action "Paned" {[Classy::WindowBuilder_win %W] add Classy::Paned}
	action "Progress bar" {[Classy::WindowBuilder_win %W] add Classy::Progress}
	action "Scrolled frame" {[Classy::WindowBuilder_win %W] add Classy::ScrolledFrame}
	action "Table" {[Classy::WindowBuilder_win %W] add Classy::Table}
	action "Fold" {[Classy::WindowBuilder_win %W] add Classy::Fold}
	action "Font select" {[Classy::WindowBuilder_win %W] add button -text "Select font" -command {set font [Classy::getfont]}}
	action "Color select" {[Classy::WindowBuilder_win %W] add button -text "Select color" -command {set color [Classy::getcolor]}}
	action "Tree widget" {[Classy::WindowBuilder_win %W] add Classy::TreeWidget}
	action "Browser" {[Classy::WindowBuilder_win %W] add Classy::Browser}
	action "CmdWidget" {[Classy::WindowBuilder_win %W] add Classy::CmdWidget}
}
menu "Help" {
	action "Window Builder" {Classy::help classy_windowbuilder} <<Help>>
	action "Builder" {Classy::help classy_builder} <<HelpBuilder>>
	separator
	action "ClassyTcl" {Classy::help ClassyTcl} <<HelpClassyTcl>>
	action "Help" {Classy::help help} <<HelpHelp>>
}
}

# Menus Classy::Dummy
# menu used in the Builder as a dummy
menu Classy::Dummy {
menu "Menu" {
}
}

# Menus Classy::Test
# menu used for testing
menu Classy::Test {
	menu "File" {
		action "Open file" {%W insert insert "Open: %W"} <<Load>>
		action "Open next" {%W insert insert "Open next: %W"} <<LoadNext>>
		action "Test" {%W insert insert "Test: %W"} <<Try>>
		menu "Trying" {
			action "Trying" {%W insert insert "submenu: %W"} Alt-d
		}
		action Save {puts save} Save
		radio "Radio try" {-variable test -value try} <<Radio1>>
		radio "Radio try2" {-variable test -value try2} <<Radio2>>
	} Alt-f
	# The find menu
	menu "Find" {
		action "Goto line" {puts "Goto line"} <<Goto>>
		action "Find" {%W insert end find} <<Find>>
		separator
		action "Replace & Find next" {%W insert end replace} <<ReplaceFindNext>>
		check "Search Reopen" {-variable test%W -onvalue yes -offvalue no} <<SearchReopen>>
	}
	action "Test" {%W insert insert "Test: %W"} Alt-t
}

# Toolbars Classy::Editor
# Editor toolbar
toolbar Classy::Editor {
	nodisplay
	action save "Save" {%W save}
	action open "Open" {eval %W load [Classy::selectfile -title Open -selectmode persistent]}
	action undo "Undo" {%W undo}
	action redo "redo" {%W redo}
	separator
	action print "Print" {%W insert insert "Print: %W"}
	action open "Open next" {%W next}
}

# Toolbars Classy::Help
# Help toolbar
toolbar Classy::Help {
	action reload "Reload" {%W reload}
	action back "Back" {%W back}
	action forward "Forward" {%W forward}
	action edit "Edit" {%W edit}
	tool Classy::Help_find "Find" 
	tool Classy::Help_findword "Find word"
	tool Classy::Help_findfile "Find file"
	tool Classy::Help_findinfile "Find in files"
}

# Toolbars Classy::Builder
# toolbar used in the ClassyTcl Builder
toolbar Classy::Builder {
	action newfunction "New function" {%W new function}
	action newtoplevel "New Toplevel" {%W new toplevel}
	action newdialog "New Dialog" {%W new dialog}
	action newframe "New Frame" {%W new frame}
	action newfile "New file" {puts %W ; %W new file}
	separator
	action copy "Copy" {%W copy}
	action cut "Cut" {%W cut}
	action paste "Paste" {%W paste}
	separator
}

# Toolbars Classy::WindowBuilder
# toolbar used in the ClassyTcl WindowBuilder
toolbar Classy::WindowBuilder {
	action cut "Delete" {%W delete}
	separator
	action save "Save" {%W save}
	action test "Test" {%W test}
	action ptest "Test with parameters" {%W testparam}
	action recreate "Recreate Dialog" {%W recreate}
	separator
	action close "Close" {destroy %W}
}

# Toolbars Classy::WindowBuilder_icons
# Tk widget toolbar used in the ClassyTcl WindowBuilder
toolbar Classy::WindowBuilder_icons {
	action Builder/classy__dynatool {Toolbar} {%W add Classy::DynaTool}
	action Builder/frame Frame {%W add frame}
	action Builder/entry Entry {%W add entry}
	action Builder/classy__entry {ClassyTcl Entry} {%W add Classy::Entry}
	action Builder/classy__numentry {ClassyTcl Numerical Entry} {%W add Classy::NumEntry}
	action Builder/button Button {%W add button}
	action Builder/checkbutton {Check button} {%W add checkbutton}
	action Builder/radiobutton {Radio button} {%W add radiobutton}
	action Builder/label Label {%W add label}
	action Builder/classy__message "ClassyTcl Message" {%W add Classy::Message}
	action Builder/message Message {%W add message}
	action Builder/vscroll "Vertical Scrollbar" {%W add scrollbar -orient vertical}
	action Builder/hscroll "Horizontal Scrollbar" {%W add scrollbar -orient horizontal}
	action Builder/listbox Listbox {%W add listbox}
	action Builder/classy__listbox {ClassyTcl ListBox} {%W add Classy::ListBox}
	action Builder/text Text {%W add text}
	action Builder/classy__text {ClassyTcl Text} {%W add Classy::Text}
	action Builder/classy__scrolledtext {ClassyTcl scrolled Text} {%W add Classy::ScrolledText}
	action Builder/canvas Canvas {%W add canvas}
	action Builder/classy__canvas {ClassyTcl Canvas} {%W add Classy::Canvas}
	action Builder/scale Scale {%W add scale}
	action Builder/classy__notebook {Notebook with tabs} {%W add Classy::NoteBook}
	action Builder/classy__optionbox {ClassyTcl OptionBox} {%W add Classy::OptionBox}
	action Builder/classy__optionmenu {ClassyTcl OptionMenu} {%W add Classy::OptionMenu}
	action Builder/classy__paned {Paned} {%W add Classy::Paned}
	action Builder/classy__progress {Progress bar} {%W add Classy::Progress}
	action Builder/classy__scrolledframe {Scrolled frame} {%W add Classy::ScrolledFrame}
	action Builder/classy__table {Table} {%W add Classy::Table}
	action Builder/classy__fold {Fold} {%W add Classy::Fold}
	action Builder/classy__fontselect {Font select} {%W add button -text "Select font" -command {set font [Classy::getfont]}}
	action Builder/classy__colorselect {Color select} {%W add button -text "Select color" -command {set color [Classy::getcolor]}}
	action Builder/classy__fileselect {File select} {%W add button -text "Select file" -command {set file [Classy::selectfile]}}
	action Builder/classy__selector {Selector} {%W add Classy::Selector}
	action Builder/classy__treewidget {Tree widget} {%W add Classy::TreeWidget}
	action Builder/classy__browser {Browser} {%W add Classy::Browser}
	action Builder/classy__cmdwidget {CmdWidget} {%W add Classy::CmdWidget}
}

# Toolbars Classy::Config
# toolbar used in ClassyTcl Configuration
toolbar Classy::Config {
	action Apply {Apply} {::Classy::config_test %W}
	action save {Save} {::Classy::config_save %W}
	action SaveAs {Save as} {::Classy::config_saveas %W}
	action load {Load} {::Classy::config_load %W}
	separator
	action reset {Reset} {::Classy::config_reset %W}
	action {Clear level} {Clear level} {::Classy::config_clear %W $::Classy::config_level}
	action {Advanced Edit} {Advanced Edit} {
		if [winfo exists .classy__.configedit] {
			raise .classy__.configedit
		} else {
			Classy::configedit .classy__.configedit
		}
	}
	separator
	action Help {Help} {::Classy::help classy_configure}
	action Close {Close} {::Classy::config_destroy %W}}

# Toolbars Classy::Dummy
# toolbar used as a dummy in the ClassyTcl WindowBuilder
toolbar Classy::Dummy {
	action Builder/question {Dummy tool} {Classy::msg "Just a dummy toolbar"}
	action Save {Save} {Classy::msg "Just a dummy toolbar"}
}

# Colors {Basic colors} Background
# Default background color
color *Background #d9d9d9

# Colors {Basic colors} {Dark backgound}
# Default dark background color
color *darkBackground #cacaca

# Colors {Basic colors} {Light backgound}
# Default dark background color
color *lightBackground #dfdfdf

# Colors {Basic colors} Foreground
# Default foreground color
color *Foreground black

# Colors {Basic colors} {Active background}
# Default active background color
color *activeBackground white

# Colors {Basic colors} {Active foreground}
# Default active foreground color
color *activeForeground black

# Colors {Basic colors} {Disabled foreground}
# Default Disabled foreground color
color *disabledForeground #7f7f7f

# Colors {Basic colors} {Selection background}
# Default Selection background color
color *selectBackground #bfdfff

# Colors {Basic colors} {Selection foreground}
# Default Selection foreground color
color *selectForeground black

# Colors {Basic colors} {Select color}
# Default Select color
color *selectColor orange

# Colors {Basic colors} {Highlight background}
# Default Highlight background color
color *highlightBackground Background

# Colors {Basic colors} {Highlight color}
# Default Highlight color
color *highlightColor black

# Colors {Basic colors} Colorlist
# List of colors as used the getcolor
text *ColorList {
	{blue cyan green yellow orange red magenta}
	{blue3 cyan3 green3 yellow3 orange3 red3 magenta3}
	{black gray20 gray40 gray50 gray60 gray80 white}
}

# Colors {Widget Colors}	{Entry background}
# Entry background color
color *Entry.background Background

# Colors {Widget Colors} {Text background}
# Text background color
#color *Text.background Background

# Colors {Widget Colors} {Listbox background}
# Listbox background color
color *Listbox.background lightBackground

# Colors {Widget Colors} {Scale foreground}
# Scale foreground color
#color *Scale.foreground black

# Colors {Widget Colors} {Scale active foreground}
# Scale active foreground color
#color *Scale.activeForeground Background

# Colors {Widget Colors} {Scale background}
# Scale background color
#color *Scale.background Background

# Colors {Widget Colors} {Scale slider foreground}
# Scale slider foreground color
#color *Scale.sliderForeground Background

# Colors {Widget Colors} {Scale slider background}
# Scale slider background color
#color *Scale.sliderBackground lightBackground

# Colors {Widget Colors} {Scrollbar foreground}
# Scrollbar foreground color
#color *Scrollbar.foreground Background

# Colors {Widget Colors} {Scrollbar active foreground}
# Scrollbar active foreground color
#color *Scrollbar.activeForeground Backgroun

# Colors {Widget Colors} {Scrollbar background}
# Scrollbar background color
#color *Scrollbar.background lightBackground

# Colors {Widget Colors} {Label background}
# Label background color
color *LabelBg darkBackground

# Fonts {Basic Fonts} Font
# basic font
font *Font {helvetica 10}

# Fonts {Basic Fonts} {Bold Font}
# basic bold font class
font *BoldFont {helvetica 10 bold}

# Fonts {Basic Fonts} {Italic Font}
# basic italic font class
font *ItalicFont {helvetica 10 italic}

# Fonts {Basic Fonts} {Bold Italic Font}
# basic bold-italic font class
font *BoldItalicFont {helvetica 10 bold italic}

# Fonts {Basic Fonts} {Non Proportional Font}
# {basic non-proportional font class}
font *NonPropFont {courier 10}

# Fonts {Widget Fonts} {Button Font}
# font used on buttons
font *Button.font Font

# Fonts {Widget Fonts} {Menu Font}
# font used in menus
font *Menu.font BoldItalicFont

# Fonts {Widget Fonts} {Menubutton font}
# font used in menu buttons
font *Menubutton.font BoldItalicFont

# Fonts {Widget Fonts} {Scale Font}
# font used in scales
font *Scale.font BoldItalicFont

# Fonts {Widget Fonts} {Text font}
# font used in text widgets
font *Text.font NonPropFont

# Fonts {Widget Fonts} {Tree font}
# default font used for text in a tree
font *treeFont Font

# Fonts {Widget Fonts} {Browser font}
# font used for names in the browser widget
font *Classy::Browser.font BoldFont

# Fonts {Widget Fonts} {Browser data font}
# font used for data in the browser widget
font *Classy::Browser.dataFont Font

# Keys Edit Cut
# Cut key
key <<Cut>> <Alt-x>

# Keys Edit Copy
# Copy key
key <<Copy>> <Alt-c>

# Keys Edit Paste
# Paste key
key <<Paste>> <Alt-v>

# Keys Edit {Paste special}
# Paste special key
key <<PasteSpecial>> <Alt-V>

# Keys Edit Undo
# Undo key
key <<Undo>> <Alt-u>

# Keys Edit Redo
# Redo key
key <<Redo>> <Alt-U>

# Keys Edit Insert
# Insert key
key <<Insert>> <Insert>

# Keys Edit Empty
# Empty key
key <<Empty>> <Control-u>

# Keys Edit Delete
# Delete key
key <<Delete>> <Delete>

# Keys Edit BackSpace
# BackSpace key
key <<BackSpace>> <BackSpace>

# Keys Edit Transpose
# Transpose key: switches the letters before and after the cursor
key <<Transpose>> <Control-t>

# Keys Edit DeleteEnd
# Delete from cursor to end
key <<DeleteEnd>> <Control-k>

# Keys Select SelectAll
# SelectAll key
key <<SelectAll>> <Alt-a>

# Keys Select SelectNone
# SelectNone key
key <<SelectNone>> <Alt-z>

# Keys Select StartSelect
# StartSelect key
key <<StartSelect>> <Control-space>

# Keys Select EndSelect
# EndSelect key
key <<EndSelect>> <Control-Shift-space>

# Keys File Load
# Load key
key <<Load>> <Alt-o>

# Keys File LoadNext
# LoadNext key
key <<LoadNext>> <Control-Alt-o>

# Keys File Save
# Save key
key <<Save>> <Alt-s>

# Keys File SaveAs
# SaveAs key
key <<SaveAs>> <Alt-S>

# Keys File New
# New key
key <<New>> <Alt-n>

# Keys File Quit
# Quit key
key <<Quit>> <Alt-Q>

# Keys File Close
# Close key
key <<Close>> <Alt-q>

# Keys File Reopen
# Reopen key
key <<Reopen>> <Alt-r>

# Keys File Macro
# Macro key
key <<Macro>> <Alt-m>

# Keys Find Goto
# Goto key
key <<Goto>> <Alt-j>

# Keys Find Find
# Find key
key <<Find>> <Alt-F>

# Keys Find FindNext
# FindNext key
key <<FindNext>> <Alt-f>

# Keys Find FindPrev
# FindPrev key
key <<FindPrev>> <Alt-b>

# Keys Find ReplaceFindNext
# ReplaceFindNext key
key <<ReplaceFindNext>> <Alt-g>

# Keys Find FindFunction
# FindFunction key
key <<FindFunction>> <Control-Alt-f>

# Keys Control Escape
# Escape key
key <<Escape>> <Escape>

# Keys Control Return
# Return key
key <<Return>> <Return>

# Keys Control Invoke
# Invoke key
key <<Invoke>> <space>

# Keys Control KeyMenu
# KeyMenu key
key <<KeyMenu>> <Alt-m>

# Keys Control Default
# Default key
key <<Default>> <Alt-d>

# Keys Control Complete
# Complete key
#key <<CompleteTab>> <Control-Shift-v>

# Keys Control FocusNext
# FocusNext key
key <<FocusNext>> {<Tab> <Control-Tab>}

# Keys Control FocusPrev
# FocusPrev key
key <<FocusPrev>> <ISO_Left_Tab>

# Keys Control SpecialFocusNext
# TextFocusNext key
key <<SpecialFocusNext>> <Control-Tab>

# Keys Control SpecialFocusPrev
# TextFocusPrev key
key <<SpecialFocusPrev>> <ISO_Left_Tab>

# Keys Misc New
# Help key
key <<New>> <Alt-n>

# Keys Misc Help
# Help key
key <<Help>> <F1>

# Keys Misc Format
# Format key
key <<Format>> <Control-Alt-j>

# Keys Misc Print
# Print key
key <<Print>> <Control-p>

# Keys Misc MarkerSet
# MarkerSet key
key <<MarkerSet>> <Alt-w>

# Keys Misc MarkerSelect
# MarkerSelect key
key <<MarkerSelect>> <Alt-Shift-w>

# Keys Misc MarkerCurrent
# MarkerCurrent key
key <<MarkerCurrent>> <Control-w>

# Keys Misc MarkerPrev
# MarkerPrev key
key <<MarkerPrev>> <Control-Shift-w>

# Keys Misc IndentIn
# IndentIn key
key <<IndentIn>> <Alt-i>

# Keys Misc IndentOut
# IndentOut key
key <<IndentOut>> <Alt-I>

# Keys Misc Connect
# Connect key
key <<Connect>> <Control-c>

# Keys Misc {Execute command}
# Execute command key
key <<ExecuteCmd>> <Alt-e>

# Keys Misc HistoryUp
# HistoryUp key
key <<HistoryUp>> <Alt-Up>

# Keys Misc HistoryDown
# HistoryDown key
key <<HistoryDown>> <Alt-Down>

# Keys Movement Up
# Up key
key <<Up>> <Up>

# Keys Movement Down
# Down key
key <<Down>> <Down>

# Keys Movement Left
# Left key
key <<Left>> <Left>

# Keys Movement Right
# Right key
key <<Right>> <Right>

# Keys Movement Home
# Home key
key <<Home>> {<Home> <Alt-Left>}

# Keys Movement End
# End key
key <<End>> {<End> <Alt-Right>}

# Keys Movement Top
# Top key
key <<Top>> <Control-Home>

# Keys Movement Bottom
# Bottom key
key <<Bottom>> <Control-End>

# Keys Movement PageTop
# PageTop key
key <<PageTop>> <Alt-Up>

# Keys Movement PageBottom
# PageBottom key
key <<PageBottom>> <Alt-Down>

# Keys Movement PageUp
# PageUp key
key <<PageUp>> <Prior>

# Keys Movement PageDown
# PageDown key
key <<PageDown>> <Next>

# Keys Movement PageLeft
# PageLeft key
key <<PageLeft>> <Alt-Prior>

# Keys Movement PageRight
# PageRight key
key <<PageRight>> <Alt-Next>

# Keys Movement WordLeft
# WordLeft key
key <<WordLeft>> <Control-Left>

# Keys Movement WordRight
# WordRight key
key <<WordRight>> <Control-Right>

# Keys Movement ParaUp
# ParaUp key
key <<ParaUp>> <Control-Up>

# Keys Movement ParaDown
# ParaDown key
key <<ParaDown>> <Control-Down>

# Keys {Movement with selection} SelectUp
# SelectUp key
key <<SelectUp>> <Shift-Up>

# Keys {Movement with selection} SelectDown
# SelectDown key
key <<SelectDown>> <Shift-Down>

# Keys {Movement with selection} SelectLeft
# SelectLeft key
key <<SelectLeft>> <Shift-Left>

# Keys {Movement with selection} SelectRight
# SelectRight key
key <<SelectRight>> <Shift-Right>

# Keys {Movement with selection} SelectHome
# SelectHome key
key <<SelectHome>> {<Shift-Home> <Shift-Alt-Left>}

# Keys {Movement with selection} SelectEnd
# SelectEnd key
key <<SelectEnd>> {<Shift-End> <Shift-Alt-Right>}

# Keys {Movement with selection} SelectTop
# SelectTop key
key <<SelectTop>> <Shift-Control-Home>

# Keys {Movement with selection} SelectBottom
# SelectBottom key
key <<SelectBottom>> <Shift-Control-End>

# Keys {Movement with selection} SelectPageTop
# SelectPageTop key
key <<SelectPageTop>> <Shift-Alt-Up>

# Keys {Movement with selection} SelectPageBottom
# SelectPageBottom key
key <<SelectPageBottom>> <Shift-Alt-Down>

# Keys {Movement with selection} SelectPageLeft
# SelectPageLeft key
key <<SelectPageLeft>> <Shift-Alt-Prior>

# Keys {Movement with selection} SelectPageRight
# SelectPageRight key
key <<SelectPageRight>> <Shift-Alt-Next>

# Keys {Movement with selection} SelectPageUp
# SelectPageUp key
key <<SelectPageUp>> <Shift-Prior>

# Keys {Movement with selection} SelectPageDown
# SelectPageDown key
key <<SelectPageDown>> <Shift-Next>

# Keys {Movement with selection} SelectWordLeft
# SelectWordLeft key
key <<SelectWordLeft>> <Shift-Control-Left>

# Keys {Movement with selection} SelectWordRight
# SelectWordRight key
key <<SelectWordRight>> <Shift-Control-Right>

# Keys {Movement with selection} SelectParaUp
# SelectParaUp key
key <<SelectParaUp>> <Shift-Control-Up>

# Keys {Movement with selection} SelectParaDown
# SelectParaDown key
key <<SelectParaDown>> <Shift-Control-Down>

# Keys Scroll ScrollPageUp
# ScrollPageUp key
key <<ScrollPageUp>> {<Control-Prior> <Control-Alt-Up>}

# Keys Scroll ScrollPageDown
# ScrollPageDown key
key <<ScrollPageDown>> {<Control-Next> <Control-Alt-Down>}

# Keys {Multiline table} TableUp
# Table Up key
key <<TableUp>> <Up>

# Keys Table TableDown
# Table Down key
key <<TableDown>> <Down>

# Keys Table TableLeft
# Table Left key
key <<TableLeft>> <Control-Left>

# Keys Table TableRight
# Table Right key
key <<TableRight>> <Control-Right>

# Keys Table TableReturn
# Table Return key
key <<TableReturn>> <Control-Return>

# Keys Table SelectTableUp
# Table Up Select key
key <<SelectTableUp>> <Shift-Up>

# Keys Table SelectTableDown
# Table Down Select key
key <<SelectTableDown>> <Shift-Down>

# Keys Table SelectTableLeft
# Table Left Select key
key <<SelectTableLeft>> <Shift-Control-Left>

# Keys Table SelectTableRight
# Table Right Select key
key <<SelectTableRight>> <Shift-Control-Right>

# Keys {Table multiline} TableUp
# Table Up key
key <<mTableUp>> <Control-Up>

# Keys {Table multiline} TableDown
# Table Down key
key <<mTableDown>> <Control-Down>

# Keys {Table multiline} TableLeft
# Table Left key
key <<mTableLeft>> <Control-Left>

# Keys {Table multiline} TableRight
# Table Right key
key <<mTableRight>> <Control-Right>

# Keys {Table multiline} SelectTableUp
# Table Up Select key
key <<SelectmTableUp>> <Control-Shift-Up>

# Keys {Table multiline} SelectTableDown
# Table Down Select key
key <<SelectmTableDown>> <Control-Shift-Down>

# Keys {Table multiline} SelectTableLeft
# Table Left Select key
key <<SelectmTableLeft>> <Control-Shift-Left>

# Keys {Table multiline} SelectTableRight
# Table Right Select key
key <<SelectmTableRight>> <Control-Shift-Right>

# Mouse {Basic Buttons} Action
# The Action button is used to select something, to invoke a button, etc.
mouse <<Action>> <1>

# Mouse {Basic Buttons} Adjust
# The Adjust button provides an alternative action, eg. invoke button without closing dialog, etc
mouse <<Adjust>> <2>

# Mouse {Basic Buttons} {X paste}
# paste the currently selected characters
mouse <<MXPaste>> <2>

# Mouse {Basic Buttons} MainMenu
# The MainMenu button is used to pop up the main menu
mouse <<MainMenu>> <Control-3>

# Mouse {Basic Buttons} Menu
# The Menu button can pop up a menu
mouse <<Menu>> <3>

# Mouse {Basic Buttons} Execute
# execute action, like when selecting in a listbox
mouse <<MExecute>> <Double-1>

# Mouse {Basic Buttons} {Adjust Execute}
# executes an alternative action, like when selecting in a listbox, but without removing the dialog it is in
mouse <<MExecuteAjust>> <Double-2>

# Mouse {Basic Buttons} {icursor}
# set the insertion cursor, without removing the selection
mouse <<MIcursor>> <Control-1>

# Mouse {Basic Buttons} {position}
# set the a scrollbar to the give position
mouse <<MPosition>> {<Control-1> <Control-2>}

# Mouse {Change selection} {Select word}
# Select entire words
mouse <<MSelectWord>> <Double-1>

# Mouse {Change selection} {Select line}
# Select entire lines
mouse <<MSelectLine>> <Triple-1>

# Mouse {Change selection} {Extend}
# extend the current selection
mouse <<MExtend>> <Shift-1>

# Mouse {Change selection} {Extend by words}
# extend the current selection by entire words
mouse <<MExtendWord>> <Double-Shift-1>

# Mouse {Change selection} {Extend by lines}
# extend the current selection by entire lines
mouse <<MExtendLine>> <Triple-Shift-1>

# Mouse {Change selection} {Add}
# add to the current selection
mouse <<MAdd>> <Control-1>

# Mouse {Change selection} {Add by words}
# add to the current selection by entire words
mouse <<MAddWord>> <Double-Control-1>

# Mouse {Change selection} {Add by lines}
# add to the current selection by entire lines
mouse <<MAddLine>> <Triple-Control-1>

# Mouse {Drag & Drop keys} {start drag}
# start drag
mouse <<Drag>> <ButtonPress-1><B1-Motion>

# Mouse {Drag & Drop keys} {Adjust drag}
# start adjust drag
mouse <<AdjustDrag>> <ButtonPress-3><B3-Motion>

# Mouse {Drag & Drop keys} {drag copy}
# xcopy instead of move
mouse <<Drag-Copy>> {<KeyPress-Control_L> <KeyPress-Control_R>}

# Mouse {Drag & Drop keys} {drag link}
# link instead of move
mouse <<Drag-Link>> {<KeyPress-Shift_L> <KeyPress-Shift_R>}

# Misc {Misc settings} {patch Tk}
# patch Tk to use virtual events. This will be only be really activated after a restart of the program (0/1)
bool *PatchTk 1

# Misc {Misc settings} {bgerror}
# patch Tk to use a different bgerror routine. This will be only be really activated after a restart of the program
{select Classy Tk} *Bgerror Classy

# Misc {Misc settings} Menutype
# Menutype: can be popup or top}
{select popup top} *MenuType top

# Misc {Misc settings} {Scrollbar position}
# Scrollbar position (left/right)
{select left right} *ScrollSide right

# Misc Dialogs {Color select}
# type of color selection dialog
{select Classy Tk} *GetColor Classy

# Misc Dialogs {Select File}
# type of Select File dialog used when running Windows
{select Win Classy} *SelectFile Win

# Misc Dialogs {Save File}
# type of Save File dialog used when running Windows
#{select Win Classy} *SaveFile Win

# Misc Dialogs {Font select}
# type of font selection dialog when running Windows
#{select Win Classy} *GetFont Win

# Misc {Relief and borders} {Border width}
# Default Border width color
int *borderWidth 1

# Misc {Relief and borders} {Menu border width}
# Default Menu border width color
#int *Menu.BorderWidth 1

# Misc {Relief and borders} {Option box border width}
# Default Option box border width color
int *Classy::OptionBox.BorderWidth 1

# Misc {Relief and borders} {Option box relief}
# Default Option box relief color
relief *Classy::OptionBox.Relief groove

# Misc {Relief and borders} {Scrollbar width}
# Default Scrollbar width color
int *Scrollbar.width 10

# Misc {Relief and borders} {Highlight thickness}
# Default Highlight thickness color
int *HighlightThickness 1

# Misc {Relief and borders} {Frame highlight thickness}
# Default Frame highlight thickness color
int *Frame.HighlightThickness 0

# Misc {Relief and borders} {Toplevel highlight thickness}
# Default Toplevel highlight thickness color
int *Toplevel.HighlightThickness 0

# Misc {Relief and borders} {Button padx}
# Default Button padx color
int *Button.padX 1

# Misc {Relief and borders} {Button pady}
# Default Button pady color
int *Button.padY 1

# Misc {Relief and borders} {Menu button padx}
# Default Menu button padx color
int *MenuButton.padX 1

# Misc {Relief and borders} {Menu button pady}
# Default Menu button pady color
int *MenuButton.padY 1

# Misc {Relief and borders} {Checkbutton anchor}
# Default Checkbutton anchor color
anchor *Checkbutton.anchor w

# Misc Other Papersizes
# possible papersizes
text *PaperSizes {
	User      "595p 842p"
	Letter    "612p 792p"
	Tabloid   "792p 1224p"
	Ledger    "1224p 792p"
	Legal     "612p 1008p"
	Statement "396p 612p"
	Executive "540p 720p"
	A0        "2380p 3368p"
	A1        "1684p 2380p"
	A2        "1190p 1684p"
	A3        "842p 1190p"
	A4        "595p 842p"
	A5        "420p 595p"
	B4        "729p 1032p"
	B5        "516p 729p"
	Folio     "612p 936p"
	Quarto    "610p 780p"
}

